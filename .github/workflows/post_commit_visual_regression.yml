name: Post-Commit Visual Regression

on:
  push:
    branches: [main, develop]
    paths:
      - 'outputs/**'
      - 'golden/**'
      - '!golden/**/*.md'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run visual regression on'
        required: false
        default: 'main'
        type: string
      force_run:
        description: 'Force run even if no images found'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read

jobs:
  check-for-images:
    runs-on: ubuntu-latest
    outputs:
      has_images: ${{ steps.check.outputs.has_images }}
      image_count: ${{ steps.check.outputs.image_count }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      with:
        ref: ${{ inputs.branch || github.ref }}
        lfs: true
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check for test images
      id: check
      run: |
        set -euo pipefail
        
        echo "=== Post-Commit Visual Regression Check ==="
        echo "Checking for test images to compare..."
        echo "Triggered by: ${{ github.event_name }}"
        echo "Branch: ${{ inputs.branch || github.ref_name }}"
        echo "Force run: ${{ inputs.force_run || false }}"
        echo "============================================"
        
        # Check if outputs directory exists and has images
        HAS_IMAGES=false
        IMAGE_COUNT=0
        
        if [ -d "outputs" ] && [ -n "$(ls -A outputs/*.png 2>/dev/null)" ]; then
          IMAGE_COUNT=$(ls -1 outputs/*.png 2>/dev/null | wc -l)
          HAS_IMAGES=true
          echo "‚úÖ Found $IMAGE_COUNT test images in outputs/ directory:"
          ls -la outputs/
        elif [ "${{ inputs.force_run || false }}" = "true" ]; then
          echo "‚ö†Ô∏è No test images found, but force_run is enabled"
          echo "Will generate sample images for testing purposes"
          HAS_IMAGES=true
          IMAGE_COUNT=0
        else
          echo "‚ÑπÔ∏è No test images found in outputs/ directory"
          echo "Post-commit visual regression will be skipped"
          echo ""
          echo "This is normal if:"
          echo "  - No visual changes were made in this commit"
          echo "  - Test images are generated by a separate CI process" 
          echo "  - This commit only contains code changes without visual outputs"
          echo ""
          echo "To force run visual regression testing:"
          echo "  - Use workflow_dispatch with force_run=true"
          echo "  - Or ensure test images are committed to outputs/ directory"
        fi
        
        echo "has_images=$HAS_IMAGES" >> $GITHUB_OUTPUT
        echo "image_count=$IMAGE_COUNT" >> $GITHUB_OUTPUT

  post-commit-visual-regression:
    needs: check-for-images
    if: needs.check-for-images.outputs.has_images == 'true'
    uses: ./.github/workflows/visual-diff.yml
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read
    with:
      outputs_directory: 'outputs'
      test_mode: ${{ needs.check-for-images.outputs.image_count == '0' }}
      artifact_suffix: 'post-commit'
      # Note: No pr_number provided since this runs on push, not PR
      # Results will be logged to workflow output instead of PR comments

  notify-on-changes:
    needs: [check-for-images, post-commit-visual-regression]
    runs-on: ubuntu-latest
    if: always() && needs.check-for-images.outputs.has_images == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get commit details
      id: commit
      run: |
        COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')
        COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
        COMMIT_HASH=$(git log -1 --pretty=format:'%h')
        
        echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
        echo "commit_author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT  
        echo "commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
    
    - name: Summarize post-commit visual regression results
      uses: actions/github-script@v7
      with:
        script: |
          const commitMessage = '${{ steps.commit.outputs.commit_message }}';
          const commitAuthor = '${{ steps.commit.outputs.commit_author }}';
          const commitHash = '${{ steps.commit.outputs.commit_hash }}';
          const visualRegressionResult = '${{ needs.post-commit-visual-regression.result }}';
          const imageCount = '${{ needs.check-for-images.outputs.image_count }}';
          
          console.log('='.repeat(60));
          console.log('POST-COMMIT VISUAL REGRESSION SUMMARY');
          console.log('='.repeat(60));
          console.log('üìù Commit: ' + commitHash + ' - ' + commitMessage);
          console.log('üë§ Author: ' + commitAuthor);
          console.log('üåø Branch: ${{ github.ref_name }}');
          console.log('üñºÔ∏è Images: ' + imageCount + ' test images processed');
          console.log('üìä Result: ' + visualRegressionResult.toUpperCase());
          console.log('');
          
          if (visualRegressionResult === 'success') {
            console.log('‚úÖ VISUAL REGRESSION TEST PASSED');
            console.log('   All images match their golden masters or were accepted');
            console.log('   No visual regressions detected in this commit');
          } else if (visualRegressionResult === 'failure') {
            console.log('‚ùå VISUAL REGRESSION TEST FAILED');
            console.log('   Visual changes detected that may need review');
            console.log('   Check the visual-diff workflow results for details');
            console.log('');
            console.log('üì¶ Download Results:');
            console.log('   ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}');
          } else {
            console.log('‚ö†Ô∏è VISUAL REGRESSION TEST INCONCLUSIVE');
            console.log('   The test completed but results are unclear');
            console.log('   Check the workflow logs for more information');
          }
          
          console.log('');
          console.log('üîó Workflow Details:');
          console.log('   Run ID: ${{ github.run_id }}');
          console.log('   Triggered by: ${{ github.event_name }}');
          console.log('   Repository: ${{ github.repository }}');
          console.log('='.repeat(60));

  notify-on-skip:
    needs: check-for-images
    runs-on: ubuntu-latest
    if: needs.check-for-images.outputs.has_images == 'false'
    
    steps:
    - name: Log skipped execution
      run: |
        echo "=== POST-COMMIT VISUAL REGRESSION SKIPPED ==="
        echo "No test images found in outputs/ directory"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Triggered by: ${{ github.event_name }}"
        echo ""
        echo "This is normal if this commit doesn't include visual changes."
        echo "Visual regression testing will run automatically when test images are available."
        echo "=============================================="